name: build-and-push

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare artifacts directory
        run: mkdir -p artifacts

      - name: Install Tor and fetch artifacts over Tor
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y tor torsocks gnupg curl coreutils
          # Write a minimal torrc for the job
          cat > /tmp/torrc <<'EOF'
          RunAsDaemon 0
          DataDirectory /var/lib/tor
          ClientOnly 1
          AvoidDiskWrites 1
          SocksPort 127.0.0.1:9050
          Log notice stdout
          EOF
          tor -f /tmp/torrc &
          # Wait for SOCKS
          for i in $(seq 1 60); do
            (echo > /dev/tcp/127.0.0.1/9050) >/dev/null 2>&1 && break
            sleep 1
            if [ "$i" -eq 60 ]; then echo "Tor SOCKS not ready"; exit 1; fi
          done
          # Download artifacts (v1.0.0, amd64)
          torsocks wget -O artifacts/ashigaru_terminal_v1.0.0_amd64.deb \
            "http://ashicodepbnpvslzsl2bz7l2pwrjvajgumgac423pp3y2deprbnzz7id.onion/Ashigaru/Ashigaru-Terminal/releases/download/v1.0.0/ashigaru_terminal_v1.0.0_amd64.deb"
          torsocks wget -O artifacts/ashigaru_terminal_v1.0.0_signed_hashes.txt \
            "http://ashicodepbnpvslzsl2bz7l2pwrjvajgumgac423pp3y2deprbnzz7id.onion/Ashigaru/Ashigaru-Terminal/releases/download/v1.0.0/ashigaru_terminal_v1.0.0_signed_hashes.txt"
          # Verify PGP + SHA256
          curl -sS https://keybase.io/ashigarudev/pgp_keys.asc | gpg --import
          gpg --verify artifacts/ashigaru_terminal_v1.0.0_signed_hashes.txt
          exp=$(awk '/File name: ashigaru_terminal_v1.0.0_amd64.deb/{getline; print $NF; exit}' artifacts/ashigaru_terminal_v1.0.0_signed_hashes.txt)
          [ -n "$exp" ] && [ "${#exp}" -eq 64 ]
          act=$(sha256sum artifacts/ashigaru_terminal_v1.0.0_amd64.deb | awk '{print $1}')
          test "$exp" = "$act"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          REPO="ghcr.io/${GITHUB_REPOSITORY,,}"
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VER="${GITHUB_REF_NAME#v}"
            echo "tags=${REPO}:${VER},${REPO}:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${REPO}:edge" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
